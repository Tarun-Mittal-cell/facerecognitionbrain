{"ast":null,"code":"var _jsxFileName = \"/Users/tarunmittal/Desktop/MERN/facialrecognitionapp/faceapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport './App.css';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst returnClarifaiRequestOptions = imageUrl => {\n  const PAT = '0c00abb445c3402789aa170e5060a41b';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'nianjing98972';\n  const APP_ID = 'test';\n  // Change these to whatever model and image URL you want to use\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(response => {\n        console.log('hi', response);\n        if (response) {\n          fetch('http://');\n        }\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        className: \"particles\",\n        type: \"cobweb\",\n        params: particlesOptions,\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this.state.box,\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 6\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","Rank","ImageLinkForm","ParticlesBg","FaceRecognition","jsxDEV","_jsxDEV","particlesOptions","particles","number","value","density","enable","value_area","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onButtonSubmit","state","fetch","then","response","json","console","log","render","className","children","type","params","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/tarunmittal/Desktop/MERN/facialrecognitionapp/faceapp/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport './App.css';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport ParticlesBg from 'particles-bg'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true, \n        value_area: 800\n      }\n    }\n  }\n}\n\nconst returnClarifaiRequestOptions = (imageUrl) => {\n  const PAT = '0c00abb445c3402789aa170e5060a41b';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = 'nianjing98972';       \n    const APP_ID = 'test';\n    // Change these to whatever model and image URL you want to use\n    const MODEL_ID = 'face-detection';\n    const IMAGE_URL = imageUrl;\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n      },\n      \"inputs\": [\n          {\n              \"data\": {\n                  \"image\": {\n                      \"url\": IMAGE_URL\n                  }\n              }\n          }\n      ]\n  });\n\n\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n    },\n    body: raw\n};\n  return requestOptions\n}\n\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    \n    fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection'  + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n    .then(response => response.json())\n    .then(response => {\n      console.log('hi', response)\n      if(response) {\n        fetch('http://')\n      }\n    })\n\n  }\n\n\n  render() {\n    return (\n     <div className=\"App\">\n        <ParticlesBg className = 'particles' type='cobweb' \n        params={particlesOptions}\n        bg={true} />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm onInputChange = \n        {this.onInputChange} \n        onButtonSubmit = {this.onButtonSubmit} \n        />\n        <FaceRecognition box={this.state.box} imageUrl = {this.state.imageUrl} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}